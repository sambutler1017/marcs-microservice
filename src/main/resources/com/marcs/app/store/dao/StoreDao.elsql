@NAME(userProfileFields)
  up.id, up.first_name, up.last_name, up.email, up.web_role_id,
  up.email_reports_enabled, up.hire_date, up.insert_date, up.last_login_date

@NAME(storeFields)
  st.id AS 'store_id', st.name AS 'store_name', st.regional_manager_id, st.manager_id

@NAME(userStatusFields)
  us.request_id, us.app_access, us.account_status, us.updated_user_id

@NAME(storeFilters)
  @WHERE
    @AND(:id)
      st.id IN (:id)
    @AND(:regional_manager_id)
      st.regional_manager_id IN (:regional_manager_id)
    @AND(:manager_id) 
      st.manager_id IN (:manager_id)
    @AND(:searchEnabled = true)
      @INCLUDE(search)

@NAME(getStoresBase)
  FROM stores st
  @INCLUDE(storeFilters)

@NAME(getStoresPage)
  @PAGING(:rowOffset, :pageSize)
    SELECT 
      @INCLUDE(storeFields)
    @INCLUDE(getStoresBase)
    ORDER BY st.name

@NAME(getStoresPageTotalCount)
  SELECT COUNT(*)
  @INCLUDE(getStoresBase)

@NAME(getRegionalManagerOfStoreById)
  SELECT @INCLUDE(userProfileFields), @INCLUDE(storeFields), @INCLUDE(userStatusFields)
  FROM stores st
    LEFT JOIN user_profile up ON st.regional_manager_id = up.id
    JOIN web_role wr ON up.web_role_id = wr.id
    JOIN user_status us ON up.id = us.user_id
  WHERE
    st.id = :id

@NAME(getStoreManagerOfStoreById)
  SELECT @INCLUDE(userProfileFields), @INCLUDE(storeFields), @INCLUDE(userStatusFields)
  FROM stores st
    LEFT JOIN user_profile up ON st.manager_id = up.id
    JOIN web_role wr ON up.web_role_id = wr.id
    JOIN user_status us ON up.id = us.user_id
  WHERE
    st.id = :id

@NAME(updateStore)
  UPDATE stores
  SET
    id   = :newId,
    name = :name
  WHERE id = :oldId

@NAME(updateStoreManagerByStoreId)
  UPDATE stores
  SET manager_id = :manager_id
  WHERE id = :id

@NAME(updateRegionalManagerOfStore)
  UPDATE stores
  SET regional_manager_id = :regional_manager_id
  WHERE id = :id

@NAME(insertStore)
  INSERT INTO stores (id, name, regional_manager_id)
  VALUES (:id, :name, :regional_manager_id)

@NAME(deleteStore)
  DELETE FROM stores
  WHERE id = :id

@NAME(clearStoreManager)
  UPDATE stores
  SET manager_id = null
  WHERE manager_id = :user_id

@NAME(clearRegionalManager)
  UPDATE stores
  SET regional_manager_id = null
  WHERE regional_manager_id = :user_id

@NAME(search)
  (@VALUE(:searchContent))